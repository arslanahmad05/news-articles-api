---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/articles":
    get:
      summary: article index
      tags:
      - article
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: article index
        '401':
          description: unarticleized
    post:
      summary: article create
      tags:
      - article
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: article index
        '401':
          description: unarticleized
        '422':
          description: invalid request published_at can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                content:
                  type: text
                article_url:
                  type: string
                published_at:
                  type: datetime
              required:
              - title
              - description
              - content
              - article_url
              - published_at
  "/api/v1//articles/{id}":
    put:
      summary: article update
      tags:
      - article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: article update
        '401':
          description: unarticleized
        '422':
          description: invalid request published_at can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: article destroy
      tags:
      - article
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: article destroy
  "/api/v1/authors":
    get:
      summary: author index
      tags:
      - Author
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: author index
        '401':
          description: unauthorized
    post:
      summary: author create
      tags:
      - author
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: author index
        '401':
          description: unauthorized
        '422':
          description: invalid request name can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1//authors/{id}":
    put:
      summary: author update
      tags:
      - author
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: author update
        '401':
          description: unauthorized
        '422':
          description: invalid request name can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: author destroy
      tags:
      - author
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: author destroy
  "/api/v1/searches?q={q}":
    get:
      summary: article index
      tags:
      - article
      parameters:
      - name: q
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: searches index
  "/api/v1/topics":
    get:
      summary: topic index
      tags:
      - topic
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: topic index
        '401':
          description: unauthorized
    post:
      summary: topic create
      tags:
      - topic
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: topic index
        '401':
          description: unauthorized
        '422':
          description: invalid request name can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1//topics/{id}":
    put:
      summary: topic update
      tags:
      - topic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: topic update
        '401':
          description: unauthorized
        '422':
          description: invalid request name can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: topic destroy
      tags:
      - topic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: topic destroy
  "/api/v1/users":
    get:
      summary: user index
      tags:
      - user
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: user index
        '401':
          description: unauthorized
    post:
      summary: user create
      tags:
      - user
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: user created
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - email
              - password
              - password_confirmation
  "/api/v1/users/{id}":
    get:
      summary: user Show
      tags:
      - user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: user Show
        '401':
          description: unauthorized
    put:
      summary: user update
      tags:
      - user
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '201':
          description: user update
        '401':
          description: unauthorized
        '422':
          description: invalid request email can not be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - email
              - password
              - password_confirmation
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
